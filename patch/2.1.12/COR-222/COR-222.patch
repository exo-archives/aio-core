Index: component/document/src/main/java/org/exoplatform/services/document/impl/BaseDocumentReader.java
===================================================================
--- component/document/src/main/java/org/exoplatform/services/document/impl/BaseDocumentReader.java	(revision 65754)
+++ component/document/src/main/java/org/exoplatform/services/document/impl/BaseDocumentReader.java	(working copy)
@@ -19,10 +19,35 @@
 import org.exoplatform.container.component.BaseComponentPlugin;
 import org.exoplatform.services.document.DocumentReader;
 
+import java.io.IOException;
+import java.io.InputStream;
+
 /**
  * Created by The eXo Platform SAS Author : Phung Hai Nam phunghainam@gmail.com
  * Oct 20, 2005
  */
 abstract public class BaseDocumentReader extends BaseComponentPlugin implements DocumentReader {
 
+  /**
+   * Validate that stream is not empty and return BufferedInputStream
+   * 
+   * @param is InputeStream
+   * @return BufferedInputStram that covers original IS or null if IS is empty.
+   * @throws IOException
+   */
+  protected boolean isInputStreamValid(InputStream is) throws IOException {
+    if (is == null) {
+      throw new NullPointerException("InputStream is null.");
+    }
+
+    if (is.available() <= 2) {
+      try {
+        is.close();
+      } catch (IOException e) {
+      }
+      return false;
+    } else {
+      return true;
+    }
+  }
 }
Index: component/document/src/main/java/org/exoplatform/services/document/impl/HTMLDocumentReader.java
===================================================================
--- component/document/src/main/java/org/exoplatform/services/document/impl/HTMLDocumentReader.java	(revision 65754)
+++ component/document/src/main/java/org/exoplatform/services/document/impl/HTMLDocumentReader.java	(working copy)
@@ -16,6 +16,11 @@
  */
 package org.exoplatform.services.document.impl;
 
+import org.exoplatform.container.xml.InitParams;
+import org.htmlparser.Parser;
+import org.htmlparser.beans.StringBean;
+import org.htmlparser.util.ParserException;
+
 import java.io.ByteArrayOutputStream;
 import java.io.IOException;
 import java.io.InputStream;
@@ -24,12 +29,6 @@
 import java.util.regex.Pattern;
 import java.util.regex.PatternSyntaxException;
 
-import org.htmlparser.Parser;
-import org.htmlparser.beans.StringBean;
-import org.htmlparser.util.ParserException;
-
-import org.exoplatform.container.xml.InitParams;
-
 /**
  * Created by The eXo Platform SAS A parser of HTML files.
  * 
@@ -66,6 +65,10 @@
    * @return The string only with text from file content.
    */
   public String getContentAsText(InputStream is) throws Exception {
+    if (!isInputStreamValid(is)) {
+      return "";
+    }
+
     String refined_text = new String();
     try {
       byte[] buffer = new byte[2048];
Index: component/document/src/main/java/org/exoplatform/services/document/impl/MSExcelDocumentReader.java
===================================================================
--- component/document/src/main/java/org/exoplatform/services/document/impl/MSExcelDocumentReader.java	(revision 65754)
+++ component/document/src/main/java/org/exoplatform/services/document/impl/MSExcelDocumentReader.java	(working copy)
@@ -16,11 +16,6 @@
  */
 package org.exoplatform.services.document.impl;
 
-import java.io.InputStream;
-import java.text.SimpleDateFormat;
-import java.util.Date;
-import java.util.Properties;
-
 import org.apache.poi.hssf.usermodel.HSSFCell;
 import org.apache.poi.hssf.usermodel.HSSFCellStyle;
 import org.apache.poi.hssf.usermodel.HSSFDateUtil;
@@ -28,6 +23,11 @@
 import org.apache.poi.hssf.usermodel.HSSFSheet;
 import org.apache.poi.hssf.usermodel.HSSFWorkbook;
 
+import java.io.InputStream;
+import java.text.SimpleDateFormat;
+import java.util.Date;
+import java.util.Properties;
+
 /**
  * Created by The eXo Platform SAS A parser of Microsoft Excel files.
  * 
@@ -56,7 +56,10 @@
    * @throws Exception
    */
   public String getContentAsText(InputStream is) throws Exception {
-    
+    if (!isInputStreamValid(is)) {
+      return "";
+    }
+
     StringBuilder builder = new StringBuilder("");
     try {
       HSSFWorkbook wb = new HSSFWorkbook(is);
@@ -121,6 +124,10 @@
    * InputStream)
    */
   public Properties getProperties(InputStream is) throws Exception {
+    if (!isInputStreamValid(is)) {
+      return new Properties();
+    }
+
     POIPropertiesReader reader = new POIPropertiesReader();
     reader.readDCProperties(is);
     return reader.getProperties();
Index: component/document/src/main/java/org/exoplatform/services/document/impl/MSOutlookDocumentReader.java
===================================================================
--- component/document/src/main/java/org/exoplatform/services/document/impl/MSOutlookDocumentReader.java	(revision 65754)
+++ component/document/src/main/java/org/exoplatform/services/document/impl/MSOutlookDocumentReader.java	(working copy)
@@ -17,12 +17,12 @@
 
 package org.exoplatform.services.document.impl;
 
+import org.apache.poi.hsmf.MAPIMessage;
+import org.apache.poi.hsmf.exceptions.ChunkNotFoundException;
+
 import java.io.InputStream;
 import java.util.Properties;
 
-import org.apache.poi.hsmf.MAPIMessage;
-import org.apache.poi.hsmf.exceptions.ChunkNotFoundException;
-
 /**
  * Created by The eXo Platform SAS Author : Sergey Karpenko
  * <sergey.karpenko@exoplatform.com.ua>
@@ -48,6 +48,10 @@
   }
 
   public String getContentAsText(InputStream is) throws Exception {
+    if (!isInputStreamValid(is)) {
+      return "";
+    }
+
     try {
       MAPIMessage message = new MAPIMessage(is);
       StringBuffer buffer = new StringBuffer();
@@ -82,7 +86,7 @@
   }
 
   public Properties getProperties(InputStream is) throws Exception {
-    return null;
+    return new Properties();
   }
 
 }
Index: component/document/src/main/java/org/exoplatform/services/document/impl/MSWordDocumentReader.java
===================================================================
--- component/document/src/main/java/org/exoplatform/services/document/impl/MSWordDocumentReader.java	(revision 65754)
+++ component/document/src/main/java/org/exoplatform/services/document/impl/MSWordDocumentReader.java	(working copy)
@@ -16,13 +16,13 @@
  */
 package org.exoplatform.services.document.impl;
 
+import org.apache.poi.hwpf.HWPFDocument;
+import org.apache.poi.hwpf.usermodel.Range;
+
 import java.io.IOException;
 import java.io.InputStream;
 import java.util.Properties;
 
-import org.apache.poi.hwpf.HWPFDocument;
-import org.apache.poi.hwpf.usermodel.Range;
-
 /**
  * Created by The eXo Platform SAS A parser of Microsoft Word files.
  * 
@@ -49,6 +49,10 @@
    * @throws Exception
    */
   public String getContentAsText(InputStream is) throws Exception {
+    if (!isInputStreamValid(is)) {
+      return "";
+    }
+
     String text = "";
     try {
       HWPFDocument doc = new HWPFDocument(is);
@@ -73,6 +77,10 @@
    * InputStream)
    */
   public Properties getProperties(InputStream is) throws Exception {
+    if (!isInputStreamValid(is)) {
+      return new Properties();
+    }
+
     POIPropertiesReader reader = new POIPropertiesReader();
     reader.readDCProperties(is);
     return reader.getProperties();
Index: component/document/src/main/java/org/exoplatform/services/document/impl/OpenOfficeDocumentReader.java
===================================================================
--- component/document/src/main/java/org/exoplatform/services/document/impl/OpenOfficeDocumentReader.java	(revision 65754)
+++ component/document/src/main/java/org/exoplatform/services/document/impl/OpenOfficeDocumentReader.java	(working copy)
@@ -17,6 +17,14 @@
 
 package org.exoplatform.services.document.impl;
 
+import org.exoplatform.commons.utils.QName;
+import org.exoplatform.services.document.DCMetaData;
+import org.xml.sax.Attributes;
+import org.xml.sax.InputSource;
+import org.xml.sax.SAXException;
+import org.xml.sax.XMLReader;
+import org.xml.sax.helpers.DefaultHandler;
+
 import java.io.InputStream;
 import java.util.Properties;
 import java.util.zip.ZipEntry;
@@ -25,15 +33,6 @@
 import javax.xml.parsers.SAXParser;
 import javax.xml.parsers.SAXParserFactory;
 
-import org.xml.sax.Attributes;
-import org.xml.sax.InputSource;
-import org.xml.sax.SAXException;
-import org.xml.sax.XMLReader;
-import org.xml.sax.helpers.DefaultHandler;
-
-import org.exoplatform.commons.utils.QName;
-import org.exoplatform.services.document.DCMetaData;
-
 /**
  * Created by The eXo Platform SAS .
  * 
@@ -62,6 +61,10 @@
    * io.InputStream)
    */
   public String getContentAsText(InputStream is) throws Exception {
+    if (!isInputStreamValid(is)) {
+      return "";
+    }
+
     try {
       SAXParserFactory saxParserFactory = SAXParserFactory.newInstance();
       saxParserFactory.setValidating(false);
@@ -106,6 +109,10 @@
    * InputStream)
    */
   public Properties getProperties(InputStream is) throws Exception {
+    if (!isInputStreamValid(is)) {
+      return new Properties();
+    }
+
     try {
       SAXParserFactory saxParserFactory = SAXParserFactory.newInstance();
       saxParserFactory.setValidating(false);
Index: component/document/src/main/java/org/exoplatform/services/document/impl/PDFDocumentReader.java
===================================================================
--- component/document/src/main/java/org/exoplatform/services/document/impl/PDFDocumentReader.java	(revision 65754)
+++ component/document/src/main/java/org/exoplatform/services/document/impl/PDFDocumentReader.java	(working copy)
@@ -69,6 +69,10 @@
    * @throws Exception
    */
   public String getContentAsText(InputStream is) throws Exception {
+    if (!isInputStreamValid(is)) {
+      return "";
+    }
+    
     PDDocument pdDocument = PDDocument.load(is);
     StringWriter sw = new StringWriter();
     try {
@@ -95,7 +99,10 @@
    * InputStream)
    */
   public Properties getProperties(InputStream is) throws Exception {
-
+    if (!isInputStreamValid(is)) {
+      return new Properties();
+    }
+    
     Properties props = null;
 
     PdfReader reader = new PdfReader(is, "".getBytes());
Index: component/document/src/main/java/org/exoplatform/services/document/impl/PPTDocumentReader.java
===================================================================
--- component/document/src/main/java/org/exoplatform/services/document/impl/PPTDocumentReader.java	(revision 65754)
+++ component/document/src/main/java/org/exoplatform/services/document/impl/PPTDocumentReader.java	(working copy)
@@ -16,11 +16,11 @@
  */
 package org.exoplatform.services.document.impl;
 
+import org.apache.poi.hslf.extractor.PowerPointExtractor;
+
 import java.io.InputStream;
 import java.util.Properties;
 
-import org.apache.poi.hslf.extractor.PowerPointExtractor;
-
 /**
  * Created by The eXo Platform SAS A parser of Microsoft PowerPoint files.
  * Parses the files with application/powerpoint mime type.
@@ -48,6 +48,10 @@
    * @throws Exception
    */
   public String getContentAsText(InputStream is) throws Exception {
+    if (!isInputStreamValid(is)) {
+      return "";
+    }
+
     PowerPointExtractor ppe = new PowerPointExtractor(is);
     return ppe.getText(true, true);
   }
@@ -64,6 +68,10 @@
    * InputStream)
    */
   public Properties getProperties(InputStream is) throws Exception {
+    if (!isInputStreamValid(is)) {
+      return new Properties();
+    }
+
     POIPropertiesReader reader = new POIPropertiesReader();
     reader.readDCProperties(is);
     return reader.getProperties();
Index: component/document/src/main/java/org/exoplatform/services/document/impl/XMLDocumentReader.java
===================================================================
--- component/document/src/main/java/org/exoplatform/services/document/impl/XMLDocumentReader.java	(revision 65754)
+++ component/document/src/main/java/org/exoplatform/services/document/impl/XMLDocumentReader.java	(working copy)
@@ -54,6 +54,10 @@
    * @return The string only with text from file content.
    */
   public String getContentAsText(InputStream is) throws Exception {
+    if (!isInputStreamValid(is)) {
+      return "";
+    }
+
     byte[] buffer = new byte[2048];
     int len;
     ByteArrayOutputStream bos = new ByteArrayOutputStream();
